{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\dell\\\\Desktop\\\\learn react\\\\front\\\\myapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\learn react\\\\front\\\\myapp\\\\src\\\\context\\\\context.js\";\n\nimport React, { createContext } from \"react\";\nimport { useState } from \"react\";\nexport var Global = createContext();\nexport var GlobalProvide = function GlobalProvide(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Oldstate = _useState2[0],\n      Newstate = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(Global.Provider, {\n    value: {\n      Oldstate: Oldstate,\n      Newstate: Newstate\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, {\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","Global","GlobalProvide","children","Oldstate","Newstate"],"sources":["C:/Users/dell/Desktop/learn react/front/myapp/src/context/context.js"],"sourcesContent":["import React, { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const Global = createContext();\r\n\r\nexport const GlobalProvide = ({ children }) => {\r\n  const [Oldstate, Newstate] = useState([]);\r\n  return (\r\n    <Global.Provider value={{ Oldstate, Newstate }}>\r\n      {{ children }}\r\n    </Global.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,IAAMC,MAAM,GAAGF,aAAa,EAA5B;AAEP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAAA,gBAChBH,QAAQ,CAAC,EAAD,CADQ;EAAA;EAAA,IACtCI,QADsC;EAAA,IAC5BC,QAD4B;;EAE7C,oBACE,oBAAC,MAAD,CAAQ,QAAR;IAAiB,KAAK,EAAE;MAAED,QAAQ,EAARA,QAAF;MAAYC,QAAQ,EAARA;IAAZ,CAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG;IAAEF,QAAQ,EAARA;EAAF,CADH,CADF;AAKD,CAPM"},"metadata":{},"sourceType":"module"}